USE [GD1C2018]
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRADO DE TABLAS----------------------------------------
---------------------------------------------------------------------------------------------------

IF OBJECT_ID ('[AVENGERS].[ITEM_FACTURA]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[ITEM_FACTURA]
GO

IF OBJECT_ID ('[AVENGERS].[CONSUMO_CONSUMIBLE]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[CONSUMO_CONSUMIBLE]
GO

IF OBJECT_ID ( '[AVENGERS].[CONSUMO]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[CONSUMO]
GO

IF OBJECT_ID ( '[AVENGERS].[CONSUMIBLE]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[CONSUMIBLE]
GO

IF OBJECT_ID ('[AVENGERS].[FACTURA]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[FACTURA]
GO

IF OBJECT_ID ('[AVENGERS].[USUARIO_HOTEL]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[USUARIO_HOTEL]
GO

IF OBJECT_ID ('[AVENGERS].[ROL_FUNCIONALIDAD]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[ROL_FUNCIONALIDAD]
GO

IF OBJECT_ID ('[AVENGERS].[FUNCIONALIDAD]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[FUNCIONALIDAD]
GO

IF OBJECT_ID ('[AVENGERS].[USUARIO_ROL]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[USUARIO_ROL]
GO

IF OBJECT_ID ('[AVENGERS].[ROL]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[ROL]
GO

IF OBJECT_ID ('[AVENGERS].[CLIENTE_ESTADIA]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[CLIENTE_ESTADIA]
GO


IF OBJECT_ID ('[AVENGERS].[ESTADIA]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[ESTADIA]
GO

IF OBJECT_ID ('[AVENGERS].[CANCELACION]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[CANCELACION]
GO

IF OBJECT_ID ('[AVENGERS].[USUARIO]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[USUARIO]
GO

IF OBJECT_ID ('[AVENGERS].[RESERVA_HABITACION]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[RESERVA_HABITACION]
GO

IF OBJECT_ID ('[AVENGERS].[RESERVA]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[RESERVA]
GO

IF OBJECT_ID ('[AVENGERS].[HABITACION]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[HABITACION]
GO

IF OBJECT_ID ('[AVENGERS].[TIPO_HABITACION]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[TIPO_HABITACION]
GO

IF OBJECT_ID ( '[AVENGERS].[HOTEL_CERRADO]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[HOTEL_CERRADO]
GO

IF OBJECT_ID ('[AVENGERS].[HOTEL_REGIMEN]','U') IS NOT NULL
	DROP TABLE [AVENGERS].[HOTEL_REGIMEN]
GO

IF OBJECT_ID ( '[AVENGERS].[REGIMEN]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[REGIMEN]
GO

IF OBJECT_ID ( '[AVENGERS].[HOTEL]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[HOTEL]
GO

IF OBJECT_ID ( '[AVENGERS].[CLIENTE]', 'U' ) IS NOT NULL
	DROP TABLE [AVENGERS].[CLIENTE]
GO

IF OBJECT_ID ('[AVENGERS].[ESTADO]','U') IS NOT NULL	
	DROP TABLE [AVENGERS].[ESTADO]
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRADO DE VISTAS----------------------------------------
---------------------------------------------------------------------------------------------------

IF OBJECT_ID ('AVENGERS.VW_CLIENTE_TOP','V') IS NOT NULL
   DROP VIEW AVENGERS.VW_CLIENTE_TOP
GO

IF OBJECT_ID ('AVENGERS.VW_HOTEL_FUERA_SERVICIO','V') IS NOT NULL
   DROP VIEW AVENGERS.VW_HOTEL_FUERA_SERVICIO
GO

IF OBJECT_ID ('AVENGERS.VW_HABITACIONES_OCUPADAS','V') IS NOT NULL
   DROP VIEW AVENGERS.VW_HABITACIONES_OCUPADAS
GO

IF OBJECT_ID ('AVENGERS.VW_HOTEL_CONSUMIBLES_FACTURADOS','V') IS NOT NULL
   DROP VIEW AVENGERS.VW_HOTEL_CONSUMIBLES_FACTURADOS
GO

IF OBJECT_ID ('AVENGERS.VW_HOTEL_RESERVAS_CANCELADAS','V') IS NOT NULL
   DROP VIEW AVENGERS.VW_HOTEL_RESERVAS_CANCELADAS
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRADO DE STORED PROCEDURES-----------------------------
---------------------------------------------------------------------------------------------------
IF OBJECT_ID('AVENGERS.SP_GENERAR_RESERVA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_GENERAR_RESERVA
GO

IF OBJECT_ID('AVENGERS.SP_MODIFICAR_RESERVA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_MODIFICAR_RESERVA
GO

IF OBJECT_ID('AVENGERS.SP_CANCELAR_RESERVA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_CANCELAR_RESERVA
GO

IF OBJECT_ID('AVENGERS.SP_REGISTRAR_ESTADIA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_REGISTRAR_ESTADIA
GO

IF OBJECT_ID('AVENGERS.SP_FACTURAR_ESTADIA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_FACTURAR_ESTADIA
GO

IF OBJECT_ID('AVENGERS.SP_GUARDAR_ITEMS_FACTURA','P') IS NOT NULL
   DROP PROCEDURE AVENGERS.SP_GUARDAR_ITEMS_FACTURA
GO

IF OBJECT_ID('AVENGERS.SP_INSERTAR_RESERVA','P')IS NOT NULL
	DROP  PROCEDURE AVENGERS.SP_INSERTAR_RESERVA
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRADO DE FUNCIONES-----------------------------
---------------------------------------------------------------------------------------------------

IF OBJECT_ID('AVENGERS.FX_HABITACION_DISPONIBLE','FN') IS NOT NULL
	DROP FUNCTION  AVENGERS.FX_HABITACION_DISPONIBLE
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRADO DE TRIGGERS--------------------------------------
---------------------------------------------------------------------------------------------------

IF OBJECT_ID('AVENGERS.TR_CONSUMO_CONSUMIBLE','TR') IS NOT NULL
	DROP TRIGGER  AVENGERS.TR_CONSUMO_CONSUMIBLE
GO

---------------------------------------------------------------------------------------------------
------------------------------------------BORRAR ESQUEMA AVENGERS----------------------------------
---------------------------------------------------------------------------------------------------
IF EXISTS (
	SELECT schema_name
	  FROM information_schema.schemata
	 WHERE schema_name = 'AVENGERS' )
 
	BEGIN
		DROP SCHEMA [AVENGERS] 
	END
GO

---------------------------------------------------------------------------------------------------
------------------------------------------CREAR ESQUEMA AVENGERS-----------------------------------
---------------------------------------------------------------------------------------------------
/****** Object:  Schema [AVENGERS] ******/
CREATE SCHEMA [AVENGERS] AUTHORIZATION [gdHotel2018]
GO
/****** Object:  Table [AVENGERS].[tablas] ******/
	SET ANSI_NULLS ON
GO
	SET QUOTED_IDENTIFIER ON
GO



---------------------------------------------------------------------------------------------------
------------------------------------------CREACION DE TABLAS---------------------------------------
---------------------------------------------------------------------------------------------------

 CREATE TABLE [AVENGERS].[ESTADO](
 	ID INT IDENTITY,
 	DESCRIPCION NVARCHAR(60) NOT NULL,
 CONSTRAINT [PK_ESTADO] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

 GO

CREATE TABLE [AVENGERS].[CLIENTE](
	ID INT IDENTITY (1,1),
	NOMBRE	NVARCHAR(255) NOT NULL,
	APELLIDO NVARCHAR(255) NOT NULL,
	TIPO_ID NVARCHAR(10) NOT NULL,
	NUMERO_ID NUMERIC(18,0) NOT NULL,
	MAIL NVARCHAR(255) NOT NULL,
	TELEFONO NUMERIC(18,0) NOT NULL,
	CALLE NVARCHAR(255) NOT NULL,
	CALLE_NRO NUMERIC(18,0) NOT NULL,
	CALLE_PISO NUMERIC(18,0) NULL,
	CALLE_DEPTO NVARCHAR(255) NULL,
	LOCALIDAD NVARCHAR(255) NOT NULL,
    PAIS NVARCHAR(50) NOT NULL,
    NACIONALIDAD NVARCHAR(255) NOT NULL,
	FECHA_NACIMIENTO DATETIME NOT NULL,
	ESTADO INT NOT NULL CONSTRAINT FK_ESTADO FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO](ID),
	CONSTRAINT CK_TIPO_ID CHECK (TIPO_ID IN ('DNI','PASAPORTE')),
	CONSTRAINT PK_CLIE_ID PRIMARY KEY CLUSTERED
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

CREATE TABLE [AVENGERS].[HOTEL](
	ID INT IDENTITY (1,1),
	NOMBRE	NVARCHAR(255) NOT NULL,
	MAIL NVARCHAR(255) NOT NULL,
	TELEFONO NUMERIC(18,0) NOT NULL,
	CALLE NVARCHAR(255) NOT NULL,
	CALLE_NRO NUMERIC(18,0) NOT NULL,
	ESTRELLAS NUMERIC(18,0) NOT NULL,
	REGARGA_ESTRELLA NUMERIC(18,0) NOT NULL,
	CIUDAD NVARCHAR(255) NOT NULL,
    PAIS NVARCHAR(50) NOT NULL,
	FECHA_CREACION DATE NOT NULL,
	ESTADO INT NOT NULL,
	CONSTRAINT PK_HOTEL_ID PRIMARY KEY (ID),
	CONSTRAINT FK_ESTADO_HOTEL FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO](ID),
	CONSTRAINT CK_ESTRELLAS CHECK (ESTRELLAS IN ('1','2','3','4','5'))
)
GO

CREATE TABLE [AVENGERS].[REGIMEN](
	ID INT IDENTITY (1,1),
	DESCRIPCION	NVARCHAR(255) NOT NULL,
	PRECIO NUMERIC(18,2) NOT NULL CONSTRAINT CK_PRECIO CHECK (PRECIO > 0),
	ESTADO INT NOT NULL CONSTRAINT FK_ESTADO_REG FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO](ID),
	CONSTRAINT PK_REGIMEN_ID PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [AVENGERS].[HOTEL_REGIMEN](
	ID_HOTEL INT,
	ID_REGIMEN INT,
	CONSTRAINT PK_HOTEL_REG PRIMARY KEY (ID_HOTEL,ID_REGIMEN),
	CONSTRAINT FK_HOTEL_REG FOREIGN KEY (ID_HOTEL) REFERENCES [AVENGERS].[HOTEL](ID),
	CONSTRAINT FK_REG_HOTEL FOREIGN KEY (ID_REGIMEN) REFERENCES [AVENGERS].[REGIMEN] (ID)
)
GO

CREATE TABLE [AVENGERS].[HOTEL_CERRADO](
	ID INT IDENTITY (1,1),
	ID_HOTEL INT,
	FECHA_DESDE DATETIME NOT NULL,
	FECHA_HASTA DATETIME NOT NULL,
	MOTIVO NVARCHAR(250) NOT NULL,
	CONSTRAINT PK_HOTEL_CER PRIMARY KEY (ID),
	CONSTRAINT FK_HOTEL_CER FOREIGN KEY (ID_HOTEL) REFERENCES [AVENGERS].[HOTEL](ID)
)
GO

CREATE TABLE [AVENGERS].[TIPO_HABITACION](
	ID INT IDENTITY (1000,1),
	DESCRIPCION	NVARCHAR(255) NOT NULL,
	PORCENTUAL NUMERIC(18,2) NOT NULL,
	CONSTRAINT PK_TIPO_HAB PRIMARY KEY (ID)
)
GO

CREATE TABLE [AVENGERS].[HABITACION](
	ID INT IDENTITY (1,1),
	NUMERO NUMERIC(18,0) NOT NULL,
	PISO NUMERIC(18,0) NOT NULL,
    FRENTE NVARCHAR(50) NOT NULL,
	TIPO NUMERIC(18,0) NOT NULL,
	COMODIDADES NVARCHAR(255) NOT NULL,
	ESTADO INT NOT NULL,
	OCUPADA BIT NOT NULL,
	ID_HOTEL INT,
	CONSTRAINT PK_HABITACION_HOTEL PRIMARY KEY (ID),
	CONSTRAINT FK_HOTEL_HAB FOREIGN KEY (ID_HOTEL) REFERENCES [AVENGERS].[HOTEL](ID),
	CONSTRAINT FK_ESTADO_HAB FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO] (ID)
)
GO

CREATE TABLE [AVENGERS].[RESERVA](
	ID INT IDENTITY (1,1),
	FECHA_CREACION DATE NOT NULL,
	FECHA_DESDE DATETIME NOT NULL,
	FECHA_HASTA DATETIME NOT NULL,
	CANTIDAD_NOCHES NUMERIC(18,0) NOT NULL,
	CODIGO_SEGURIDAD NUMERIC(18,0) NOT NULL,
	ID_REGIMEN INT NOT NULL CONSTRAINT FK_RESERVA_REG FOREIGN KEY (ID_REGIMEN) REFERENCES [AVENGERS].[REGIMEN](ID),
	ID_CLIENTE INT NOT NULL CONSTRAINT FK_RESERVA_CLI FOREIGN KEY (ID_CLIENTE) REFERENCES [AVENGERS].[CLIENTE](ID),
	MODIFICADA BIT NOT NULL,
	MODIFICADA_USUARIO NVARCHAR(255) NOT NULL,
	ESTADO INT NOT NULL CONSTRAINT FK_ESTADO_RES FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO] (ID),
	CONSTRAINT PK_RESERVA PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
	
GO

CREATE TABLE [AVENGERS].[RESERVA_HABITACION](
	ID_RESERVA INT,
	ID_HABITACION INT,
	CONSTRAINT PK_RESERVA_HABITACION_ID PRIMARY KEY (ID_RESERVA,ID_HABITACION),
	CONSTRAINT FK_RES_HAB_RES FOREIGN KEY (ID_RESERVA) REFERENCES [AVENGERS].[RESERVA](ID),
	CONSTRAINT FK_RES_HAB_HAB FOREIGN KEY (ID_HABITACION) REFERENCES [AVENGERS].[HABITACION](ID)
)
GO

CREATE TABLE [AVENGERS].[USUARIO](
	ID INT IDENTITY (1,1),
	USERNAME NVARCHAR(30) CONSTRAINT UQ_USR_USERNAME UNIQUE NOT NULL,
	PASSWORD NVARCHAR(100) NOT NULL ,
	--- Datos identificatorios a la persona (administrador o recepcionista). tengo dudas
	APELLIDO NVARCHAR(30) NOT NULL,
	NOMBRE NVARCHAR(30) NOT NULL,
	TIPO_DOC NVARCHAR(10) NOT NULL,
	NUMERO_DOC NVARCHAR(11)NOT NULL,
	MAIL NVARCHAR(30),
	TELEFONO NVARCHAR(30),
	DIRECCION NVARCHAR(100) NOT NULL,
	FECHA_NACIMIENTO DATETIME NOT NULL,
	INTENTOS_LOGIN INT NOT NULL,
	ESTADO INT NOT NULL CONSTRAINT FK_ESTADO_USR FOREIGN KEY (ESTADO) REFERENCES [AVENGERS].[ESTADO] (ID),
	CONSTRAINT PK_USUARIO PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [AVENGERS].[CANCELACION](
	ID INT IDENTITY (1,1),
	ID_RESERVA INT NOT NULL,
	MOTIVO NVARCHAR(500) NOT NULL,
	FECHA DATE NOT NULL,
	ID_USUARIO INT NOT NULL,
	CONSTRAINT PK_CANCELACION_ID PRIMARY KEY (ID),
	CONSTRAINT FK_CAN_RES FOREIGN KEY (ID_RESERVA) REFERENCES [AVENGERS].[RESERVA](ID),
	CONSTRAINT FK_CAN_USR FOREIGN KEY (ID_USUARIO) REFERENCES [AVENGERS].[USUARIO](ID)
)
GO

CREATE TABLE [AVENGERS].[ESTADIA](
	ID INT IDENTITY (1,1),
	NUMERO_RESERVA INT NOT NULL  CONSTRAINT FK_ESTADIA_RES FOREIGN KEY (NUMERO_RESERVA) REFERENCES [AVENGERS].[RESERVA](ID) ,
	FECHA_INICIO DATETIME NOT NULL,
	ID_USUARIO INT NOT NULL CONSTRAINT FK_ESTADIA_USR FOREIGN KEY (ID_USUARIO) REFERENCES [AVENGERS].[USUARIO](ID),
	IN_OUT VARBINARY NOT NULL,
	CANTIDAD_NOCHES	NUMERIC(18,0) NOT NULL,
	ID_CLIENTE INT NOT NULL CONSTRAINT FK_ESTADIA_HAB FOREIGN KEY (ID_CLIENTE) REFERENCES [AVENGERS].[CLIENTE](ID),
	CONSTRAINT PK_ESTADIA_ID PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

CREATE TABLE [AVENGERS].[CLIENTE_ESTADIA](
	ID_CLIENTE INT,
	ID_ESTADIA INT,
	CONSTRAINT PK_CLIENTE_ESTADIA_ID PRIMARY KEY (ID_CLIENTE,ID_ESTADIA),
	CONSTRAINT FK_CLI_EST_CLI FOREIGN KEY (ID_CLIENTE) REFERENCES [AVENGERS].[CLIENTE](ID),
	CONSTRAINT FK_CLI_EST_EST FOREIGN KEY (ID_ESTADIA) REFERENCES [AVENGERS].[ESTADIA](ID)
)
GO

 CREATE TABLE [AVENGERS].[ROL](
 	ID INT IDENTITY (1,1),
 	NOMBRE NVARCHAR(30) NOT NULL,
 	ID_ESTADO INT NOT NULL,
 	CONSTRAINT PK_ROL PRIMARY KEY (ID),
 	CONSTRAINT FK_ID_ESTADO FOREIGN KEY (ID_ESTADO) REFERENCES [AVENGERS].[ESTADO](ID)
 )
 GO

CREATE TABLE [AVENGERS].[USUARIO_ROL](
	ID_USUARIO INT NOT NULL,
	ID_ROL INT NOT NULL ,
	CONSTRAINT PK_USUARIO_ROL PRIMARY KEY (ID_USUARIO,ID_ROL),
	CONSTRAINT FK_USUARIO FOREIGN KEY (ID_USUARIO) REFERENCES [AVENGERS].[USUARIO](ID),
	CONSTRAINT FK_ROL FOREIGN KEY (ID_ROL) REFERENCES [AVENGERS].[ROL] (ID)
)
 GO

 CREATE TABLE [AVENGERS].[FUNCIONALIDAD](
	ID INT IDENTITY (1,1),
	DESCRIPCION NVARCHAR(60) NOT NULL,
	WINFORM NVARCHAR(60) NOT NULL,
	ID_ESTADO INT NOT NULL,
	CONSTRAINT PK_FUNCIONALIDAD PRIMARY KEY (ID),
	CONSTRAINT FK_ESTADO_FUNC FOREIGN KEY (ID_ESTADO) REFERENCES [AVENGERS].[ESTADO](ID)
)
GO

CREATE TABLE [AVENGERS].[ROL_FUNCIONALIDAD](
	ID_ROL INT NOT NULL,
	ID_FUNCIONALIDAD INT NOT NULL,
	CONSTRAINT PK_ROL_FUNCIONALIDAD PRIMARY KEY (ID_ROL,ID_FUNCIONALIDAD),
	CONSTRAINT FK_ROL_FUNC_ID FOREIGN KEY (ID_ROL) REFERENCES [AVENGERS].[ROL](ID),
	CONSTRAINT FK_FUNC_ROL_ID FOREIGN KEY (ID_FUNCIONALIDAD) REFERENCES [AVENGERS].[FUNCIONALIDAD](ID)
)
GO

CREATE TABLE [AVENGERS].[USUARIO_HOTEL](
	ID_USUARIO INT NOT NULL,
	ID_HOTEL INT NOT NULL,
	CONSTRAINT PK_USR_HOTEL PRIMARY KEY (ID_USUARIO,ID_HOTEL),
	CONSTRAINT FK_USR_USR FOREIGN KEY (ID_USUARIO) REFERENCES [AVENGERS].[USUARIO](ID),
	CONSTRAINT FK_USR_HOTEL FOREIGN KEY (ID_HOTEL) REFERENCES [AVENGERS].[HOTEL](ID)
)
GO

CREATE TABLE [AVENGERS].[FACTURA](
	NUMERO NUMERIC(18,0),-- IDENTITY (1,1),
	TIPO CHAR NOT NULL,
	NUMERO_RESERVA INT NOT NULL,
	FECHA DATETIME NOT NULL,
	ID_CLIENTE INT NOT NULL,
	DIAS_USADOS INT NOT NULL,
	DIAS_NOUSADOS INT NOT NULL,
	TOTAL NUMERIC(18,2) NOT NULL,
	FORMA_PAGO NVARCHAR(10) NOT NULL, 
	DATOS_PAGO_TARJETA NVARCHAR(255) NULL,
	CONSTRAINT PK_FACTURA_NUM_TIP PRIMARY KEY (NUMERO,TIPO),
	CONSTRAINT FK_FAC_CLI FOREIGN KEY (ID_CLIENTE) REFERENCES [AVENGERS].[CLIENTE](ID),
	CONSTRAINT FK_FAC_RES FOREIGN KEY (NUMERO_RESERVA) REFERENCES [AVENGERS].[RESERVA](ID),
	CONSTRAINT CK_TIPO_FACT CHECK (TIPO IN ('A','B','C')),
	CONSTRAINT CK_FORMA_PAGO CHECK (FORMA_PAGO IN ('EFECTIVO','DEBITO','CREDITO'))
)
GO

CREATE TABLE [AVENGERS].[CONSUMIBLE](
	ID NUMERIC(18,0),
	DESCRIPCION NVARCHAR(255) NOT NULL,
	PRECIO NUMERIC(18,2) NOT NULL,
	CONSTRAINT PK_CONSUMIBLE_ID PRIMARY KEY CLUSTERED 
(
 [ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [AVENGERS].[CONSUMO](
	ID INT IDENTITY (1,1),
	ID_ESTADIA INT NOT NULL,
	ID_CONSUMIBLE NUMERIC(18,0) NOT NULL,
	CANTIDAD INT NOT NULL,
	CONSTRAINT FK_CONS_ESTADIA FOREIGN KEY (ID_ESTADIA) REFERENCES [AVENGERS].[ESTADIA](ID),
	CONSTRAINT FK_CONS_BLE FOREIGN KEY (ID_CONSUMIBLE) REFERENCES [AVENGERS].[CONSUMIBLE](ID),
	CONSTRAINT PK_CONSUMO_ID PRIMARY KEY CLUSTERED 
(
 [ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO

CREATE TABLE [AVENGERS].[CONSUMO_CONSUMIBLE](
	ID_CONSUMO INT,
	ID_CONSUMIBLE NUMERIC(18,0),
	CONSTRAINT PK_CONS_CONS PRIMARY KEY (ID_CONSUMO,ID_CONSUMIBLE),
	CONSTRAINT FK_CONS_01 FOREIGN KEY (ID_CONSUMO) REFERENCES [AVENGERS].[CONSUMO](ID),
	CONSTRAINT FK_CONS_02 FOREIGN KEY (ID_CONSUMIBLE) REFERENCES [AVENGERS].[CONSUMIBLE](ID)
)
GO

CREATE TABLE [AVENGERS].[ITEM_FACTURA](
	ID INT IDENTITY(1,1),
	NUMERO_FAC NUMERIC(18,0),
	TIPO_FAC CHAR,
	POSICION INT,
	MONTO NUMERIC(18,2) NOT NULL,
	CANTIDAD NUMERIC (18,0) NOT NULL,
	ID_CONSUMO INT NOT NULL,
	CONSTRAINT PK_ITEM_FAC_ID PRIMARY KEY (ID),
	CONSTRAINT FK_ITEM_FAC_NUM FOREIGN KEY (NUMERO_FAC,TIPO_FAC) REFERENCES [AVENGERS].[FACTURA](NUMERO,TIPO),
	CONSTRAINT FK_ITEM_CONSUMO FOREIGN KEY (ID_CONSUMO) REFERENCES [AVENGERS].[CONSUMO](ID)
)
GO



---------------------------------------------------------------------------------------------------
------------------------------------------MIGRACIÓN DE DATOS---------------------------------------
---------------------------------------------------------------------------------------------------

INSERT INTO [AVENGERS].[ESTADO]
	(DESCRIPCION)
VALUES
	('HABILITADO'),
	('INHABILITADO'),
	('BLOQUEADO'),
	('RESERVA CORRECTA'),
	('RESERVA MODIFICADA'),
	('RESERVA CANCELADA POR RECEPCION'),
	('RESERVA CANCELADA POR CLIENTE'),
	('RESERVA CANCELADA POR NO-SHOW'),
	('RESERVA CON INGRESO')
GO

INSERT INTO [AVENGERS].[USUARIO]
	(USERNAME,PASSWORD,APELLIDO,NOMBRE,TIPO_DOC,NUMERO_DOC,MAIL,TELEFONO,DIRECCION,FECHA_NACIMIENTO,INTENTOS_LOGIN,ESTADO)
VALUES
	('admin','TRvQi6GMKUeAEmkfRINo13Wu5dKqQOcwk4XmU4S1eO0=', 
	 'FRBA','UTN','DNI','92345678','gestion@gdd.com.ar',01141234567,'Av. Medrano 951','01/01/1990',0,1), -- Estado = habilitado
	--Password = Hash(adminw23e)
	('guest','NnwsiRrqDgSUD3Gu+Drr35so+iWHOM9/nVa/MfoZTo=',
	 'Huesped','Cliente','DNI',12345678,'info@gdd.com.ar',01147234567,'Av. Medrano 951','01/01/1990',0,1) -- Estado = habilitado
	--Password = Hash(guesthuesped)
GO

INSERT INTO [AVENGERS].[ROL]
	(NOMBRE,ID_ESTADO)
VALUES
	('Administrador',1),
	('Recepcionista',1),
	('Guest',1)
GO

INSERT INTO [AVENGERS].[USUARIO_ROL]
	(ID_USUARIO,ID_ROL)
VALUES
	(1,1), --- admin/Administrador
	(2,3)  --- guest/Guest
GO

INSERT INTO [AVENGERS].[FUNCIONALIDAD]
	(DESCRIPCION,WINFORM,ID_ESTADO)
VALUES
	('ABM de Rol','AbmRol.Listado',1),
	('ABM de Usuario','ABMUsuario.Listado',1),
	('ABM de Cliente','AbmCliente.ListadoCliente',1),
	('ABM de Hotel','AbmHotel.ListadoHotel',1),
	('ABM de Habitacion','AbmHabitacion.ListadoHabitacion',1),
	('ABM de Regimen','AbmRegimen.ListadoRegimen',1),
	('Generar Reserva','GenerarModificacionReserva.ListadoReserva',1),
	('Modificar Reserva','GenerarModificacionReserva.ModificarReserva',1),
	('Cancelar Reserva','CancelarReserva.CancelarReserva',1),
	('Registrar Estadia','RegistrarEstadia.RegistrarEstadia',1),
	('Registrar Consumibles','RegistrarConsumible.RegistrarConsumible',1),
	('Facturar Estadia','FacturarEstadia.FacturarEstadia',1),
	('Listados','ListadoEstadistico.ListadoEstadistico',1)
GO

INSERT INTO [AVENGERS].[ROL_FUNCIONALIDAD]
	(ID_ROL,ID_FUNCIONALIDAD)
VALUES
	(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(1,11),(1,12),(1,13),
	(2,3),(2,5),(2,6),(2,7),(2,8),(2,9),(2,10),(2,11),(2,12),
	(3,7),(3,8)
GO

INSERT INTO [AVENGERS].[CONSUMIBLE]
           (ID,DESCRIPCION,PRECIO)
	SELECT DISTINCT Consumible_Codigo, Consumible_Descripcion, Consumible_Precio
			FROM gd_esquema.Maestra
			WHERE Consumible_Codigo IS NOT NULL AND 
				  Consumible_Descripcion IS NOT NULL AND
				  Consumible_Precio IS NOT NULL
GO

INSERT INTO [AVENGERS].[CONSUMIBLE]
           (ID,DESCRIPCION,PRECIO)
VALUES (1,'Descuento por regimen de estadía',0)
GO

INSERT INTO [AVENGERS].[CLIENTE]
	( NOMBRE,APELLIDO,TIPO_ID,NUMERO_ID,MAIL,TELEFONO,CALLE, CALLE_NRO,CALLE_PISO,CALLE_DEPTO,LOCALIDAD,PAIS,
	  NACIONALIDAD,FECHA_NACIMIENTO,ESTADO)

SELECT DISTINCT
	 [Cliente_Nombre]
	,[Cliente_Apellido]
	,'PASAPORTE' 'TIPO_ID'
	,[Cliente_Pasaporte_Nro]
	,[Cliente_Mail]
	,000 'TELEFONO'
	,[Cliente_Dom_Calle]
	,[Cliente_Nro_Calle]
	,[Cliente_Piso]
	,[Cliente_Depto]
	,'X' 'LOCALIDAD'
	,'ARGENTINA'
	,[Cliente_Nacionalidad]
	,[Cliente_Fecha_Nac]
	,1 'ESTADO'
FROM [GD1C2018].[gd_esquema].[Maestra]
GO

INSERT INTO [AVENGERS].[HOTEL]
			(NOMBRE,
			 MAIL,
			 TELEFONO,
			 CALLE,
			 CALLE_NRO,
			 ESTRELLAS,
			 REGARGA_ESTRELLA,
			 CIUDAD,
			 PAIS,
			 FECHA_CREACION,
			 ESTADO
			)

SELECT DISTINCT
			  'HOTEL ',
			 'MIGRACION@GMAIL.COM',
			  1234567 'TELEFONO',
			  Hotel_Calle,
			  Hotel_Nro_Calle,
			  Hotel_CantEstrella,
			  Hotel_Recarga_Estrella,
			  Hotel_Ciudad,
			  'ARGENTINA',
			  GETDATE() ,
			  1	'ESTADO'			
FROM  [GD1C2018].[gd_esquema].[Maestra]
GO

UPDATE [AVENGERS].[HOTEL] SET NOMBRE = NOMBRE + CONVERT(VARCHAR, ID)

INSERT INTO [AVENGERS].[USUARIO_HOTEL]
           (ID_USUARIO,ID_HOTEL)
     VALUES
			(1,1),(1,2),(1,3),(1,4),(1,5),(1,6),(1,7),(1,8),(1,9),(1,10),(1,11),(1,12),(1,13),(1,14),(1,15)
GO

SET IDENTITY_INSERT [AVENGERS].[TIPO_HABITACION] ON
INSERT INTO [AVENGERS].[TIPO_HABITACION] (ID,DESCRIPCION,PORCENTUAL)
SELECT 
		Habitacion_Tipo_Codigo,
		Habitacion_Tipo_Descripcion,
		Habitacion_Tipo_Porcentual
FROM [gd_esquema].[Maestra]
GROUP BY Habitacion_Tipo_Codigo,
		 Habitacion_Tipo_Descripcion,
		 Habitacion_Tipo_Porcentual
ORDER BY Habitacion_Tipo_Codigo DESC

GO
SET IDENTITY_INSERT [AVENGERS].[FUNCIONALIDAD] OFF

INSERT INTO [AVENGERS].[HABITACION] (NUMERO,PISO,FRENTE,TIPO,COMODIDADES,ESTADO,OCUPADA,ID_HOTEL)
SELECT DISTINCT
            Habitacion_Numero,
			Habitacion_Piso,
			Habitacion_Frente,
			Habitacion_Tipo_Codigo,
			'COMODIDADES' COMODIDADES,
			1 'ESTADO',
			1 'OCUPADA', --ocupada por Default
			(HOTEL.ID)
FROM [GD1C2018].[gd_esquema].[Maestra] AS MAESTRA
INNER JOIN [AVENGERS].[TIPO_HABITACION] AS T_HAB
			 ON MAESTRA.Habitacion_Tipo_Codigo = T_HAB.ID
INNER JOIN [AVENGERS].[HOTEL] AS HOTEL 
		   ON MAESTRA.Hotel_Calle = HOTEL.CALLE
		   AND MAESTRA.Hotel_Nro_Calle = HOTEL.CALLE_NRO
		   AND MAESTRA.Hotel_CantEstrella = Hotel_CantEstrella
		   AND MAESTRA.Hotel_Ciudad = HOTEL.CIUDAD
GO

INSERT INTO [AVENGERS].[REGIMEN] ( DESCRIPCION,PRECIO,ESTADO)
SELECT Regimen_Descripcion,
	   Regimen_Precio,
	   1 'ESTADO'
 FROM [gd_esquema].[Maestra]	 
 GROUP BY Regimen_Descripcion,
		 Regimen_Precio
 ORDER BY 1 DESC
GO


INSERT INTO [AVENGERS].[HOTEL_REGIMEN]
            (ID_HOTEL,ID_REGIMEN)
    VALUES
			(1,1),(1,2),(1,3),(1,4),
			(2,1),(2,2),(2,3),(2,4),
			(3,1),(3,2),(3,3),(3,4),
			(4,1),(4,2),(4,3),(4,4),
			(5,1),(5,2),(5,3),(5,4),
			(6,1),(6,2),(6,3),(6,4),
			(7,1),(7,2),(7,3),(7,4),
			(8,1),(8,2),(8,3),(8,4),
			(9,1),(9,2),(9,3),(9,4),
			(10,1),(10,2),(10,3),(10,4),
			(11,1),(11,2),(11,3),(11,4),
			(12,1),(12,2),(12,3),(12,4),
			(13,1),(13,2),(13,3),(13,4),
			(14,1),(14,2),(14,3),(14,4),
			(15,1),(15,2),(15,3),(15,4)
GO

INSERT INTO [AVENGERS].[RESERVA]
			(FECHA_CREACION,FECHA_DESDE,FECHA_HASTA,CANTIDAD_NOCHES,
			CODIGO_SEGURIDAD,ID_REGIMEN,ID_CLIENTE,MODIFICADA, MODIFICADA_USUARIO, ESTADO)
SELECT DISTINCT
			GETDATE(),
			Reserva_Fecha_Inicio,
			DATEADD(dd,Reserva_Cant_Noches,Reserva_Fecha_Inicio),
			Reserva_Cant_Noches,
			Reserva_Codigo,
			(REGIMEN.ID),
			(CLIENTE.ID),
			0,
			0,
			1 'ESTADO'
FROM [gd_esquema].[Maestra] AS MAESTRA
INNER JOIN [AVENGERS].[CLIENTE] AS CLIENTE
        ON MAESTRA.[Cliente_Nombre] = CLIENTE.NOMBRE
		AND MAESTRA.[Cliente_Apellido]= CLIENTE.APELLIDO
		AND MAESTRA.[Cliente_Mail] = CLIENTE.MAIL
		AND MAESTRA.[Cliente_Pasaporte_Nro] = CLIENTE.NUMERO_ID
	    AND MAESTRA.[Cliente_Dom_Calle] = CLIENTE.CALLE
	    AND MAESTRA.[Cliente_Nro_Calle] = CLIENTE.CALLE_NRO
	    AND MAESTRA.[Cliente_Piso] = CLIENTE.CALLE_PISO
	    AND MAESTRA.[Cliente_Depto] = CLIENTE.CALLE_DEPTO
		AND MAESTRA.[Cliente_Nacionalidad] = CLIENTE.NACIONALIDAD
		AND MAESTRA.[Cliente_Fecha_Nac] = CLIENTE.FECHA_NACIMIENTO
INNER JOIN [AVENGERS].[REGIMEN] AS REGIMEN
		ON MAESTRA.Regimen_Descripcion = REGIMEN.DESCRIPCION
		AND MAESTRA.Regimen_Precio = REGIMEN.PRECIO
GO

INSERT INTO [AVENGERS].[ESTADIA]
           ([NUMERO_RESERVA]
           ,[FECHA_INICIO]
           ,[ID_USUARIO]
           ,[IN_OUT]
           ,[CANTIDAD_NOCHES]
           ,[ID_CLIENTE])

   SELECT DISTINCT RESERVA.ID,
				   Estadia_Fecha_Inicio,
				   2, --guest
				   1, --IN ( deberiamos hacer el calculo por la reserva, SI YA ESTA OUT, O SI ESTA IN)
				   Estadia_Cant_Noches,
				   RESERVA.ID_CLIENTE
	  FROM [gd_esquema].[Maestra] AS MAESTRA
		INNER JOIN AVENGERS.RESERVA AS RESERVA ON MAESTRA.Reserva_Cant_Noches = RESERVA.CANTIDAD_NOCHES
											   AND MAESTRA.Reserva_Codigo = RESERVA.CODIGO_SEGURIDAD
											   AND MAESTRA.Reserva_Fecha_Inicio = RESERVA.FECHA_DESDE
		WHERE MAESTRA.Estadia_Cant_Noches IS NOT NULL AND MAESTRA.Estadia_Fecha_Inicio IS NOT NULL
GO

INSERT INTO AVENGERS.CLIENTE_ESTADIA(ID_CLIENTE,ID_ESTADIA)
SELECT C.ID, E.ID
  FROM AVENGERS.CLIENTE AS C INNER JOIN AVENGERS.ESTADIA E ON C.ID = E.ID_CLIENTE
GO


INSERT INTO [AVENGERS].[RESERVA_HABITACION] ([ID_RESERVA],[ID_HABITACION])
SELECT DISTINCT RES.ID, HAB.ID
  FROM gd_esquema.Maestra AS MAESTRA 
	   INNER JOIN AVENGERS.CLIENTE AS CLIENTE ON MAESTRA.[Cliente_Nombre] = CLIENTE.NOMBRE
											AND MAESTRA.[Cliente_Apellido]= CLIENTE.APELLIDO
											AND MAESTRA.[Cliente_Mail] = CLIENTE.MAIL
											AND MAESTRA.[Cliente_Pasaporte_Nro] = CLIENTE.NUMERO_ID
											AND MAESTRA.[Cliente_Dom_Calle] = CLIENTE.CALLE
											AND MAESTRA.[Cliente_Nro_Calle] = CLIENTE.CALLE_NRO
											AND MAESTRA.[Cliente_Piso] = CLIENTE.CALLE_PISO
											AND MAESTRA.[Cliente_Depto] = CLIENTE.CALLE_DEPTO
										    AND MAESTRA.[Cliente_Nacionalidad] = CLIENTE.NACIONALIDAD
											AND MAESTRA.[Cliente_Fecha_Nac] = CLIENTE.FECHA_NACIMIENTO
		INNER JOIN AVENGERS.RESERVA AS RES ON RES.ID_CLIENTE = CLIENTE.ID
		INNER JOIN AVENGERS.HABITACION AS HAB ON MAESTRA.Habitacion_Frente = HAB.FRENTE
												AND MAESTRA.Habitacion_Numero = HAB.NUMERO
												AND MAESTRA.Habitacion_Piso = HAB.PISO
												AND MAESTRA.Habitacion_Tipo_Codigo = HAB.TIPO
												
GO


--CONSUMO
INSERT INTO [AVENGERS].[CONSUMO] 
SELECT distinct
		ESTADIA.ID,
		CONSUMIBLE.ID,
		CONSUMIBLE.PRECIO * ESTADIA.CANTIDAD_NOCHES 'No tengo idea si es correcto discutamoslo despues'
FROM  gd_esquema.Maestra as MAESTRA

INNER JOIN [AVENGERS].[CLIENTE] ON MAESTRA.[Cliente_Nombre] = CLIENTE.NOMBRE
								AND MAESTRA.[Cliente_Apellido]= CLIENTE.APELLIDO
								AND MAESTRA.[Cliente_Mail] = CLIENTE.MAIL
								AND MAESTRA.[Cliente_Pasaporte_Nro] = CLIENTE.NUMERO_ID

INNER JOIN [AVENGERS].[ESTADIA]  ON CLIENTE.ID = ESTADIA.ID_CLIENTE

INNER JOIN [AVENGERS].[CONSUMIBLE] ON 	MAESTRA.Consumible_Codigo = CONSUMIBLE.ID
								   AND MAESTRA.Consumible_Descripcion = CONSUMIBLE.DESCRIPCION
		                           AND MAESTRA.Consumible_Precio = CONSUMIBLE.PRECIO
GO

INSERT INTO [AVENGERS].[CONSUMO_CONSUMIBLE]
SELECT DISTINCT 
		CONSUMO.ID,
		CONSUMIBLE.ID
FROM [AVENGERS].[CONSUMO] 
INNER JOIN [AVENGERS].[CONSUMIBLE] ON CONSUMO.ID_CONSUMIBLE = CONSUMIBLE.ID

GO

INSERT INTO [AVENGERS].[FACTURA]
SELECT DISTINCT
		MAESTRA.Factura_Nro,
		'B', -- se asume consumidor final
		RESERVA.ID,
		MAESTRA.Factura_Fecha,
		CLIENTE.ID,
		0 AS_DIAS_USADOS,
		0 AS DIAS_NO_USADOS,
		MAESTRA.Factura_Total,
		'DEBITO' AS FORMA_PAGO, -- se asume todos pagaron con debito
		NULL as  DATOS_PAGO_TARJETA
FROM [gd_esquema].[Maestra] AS MAESTRA
INNER JOIN [AVENGERS].[CLIENTE] AS CLIENTE
        ON MAESTRA.[Cliente_Nombre] = CLIENTE.NOMBRE
		AND MAESTRA.[Cliente_Apellido]= CLIENTE.APELLIDO
		AND MAESTRA.[Cliente_Mail] = CLIENTE.MAIL
		AND MAESTRA.[Cliente_Pasaporte_Nro] = CLIENTE.NUMERO_ID
	    AND MAESTRA.[Cliente_Dom_Calle] = CLIENTE.CALLE
	    AND MAESTRA.[Cliente_Nro_Calle] = CLIENTE.CALLE_NRO
	    AND MAESTRA.[Cliente_Piso] = CLIENTE.CALLE_PISO
	    AND MAESTRA.[Cliente_Depto] = CLIENTE.CALLE_DEPTO
		AND MAESTRA.[Cliente_Nacionalidad] = CLIENTE.NACIONALIDAD
		AND MAESTRA.[Cliente_Fecha_Nac] = CLIENTE.FECHA_NACIMIENTO
inner join [AVENGERS].[RESERVA] ON cliente.ID = RESERVA.ID_CLIENTE
WHERE MAESTRA.Factura_Nro IS NOT NULL
GO

INSERT INTO [AVENGERS].[ITEM_FACTURA]
SELECT	 MAESTRA.Factura_Nro,
		 'B'  AS CONSUMIDOR_FINAL,
		 1,
		 MAESTRA.Item_Factura_Monto,
         MAESTRA.Item_Factura_Cantidad,
		 CONSUMO.ID 
FROM [gd_esquema].[Maestra] AS MAESTRA
INNER JOIN [AVENGERS].[CLIENTE] AS CLIENTE
        ON MAESTRA.[Cliente_Nombre] = CLIENTE.NOMBRE
		AND MAESTRA.[Cliente_Apellido]= CLIENTE.APELLIDO
		AND MAESTRA.[Cliente_Mail] = CLIENTE.MAIL
		AND MAESTRA.[Cliente_Pasaporte_Nro] = CLIENTE.NUMERO_ID
	    AND MAESTRA.[Cliente_Dom_Calle] = CLIENTE.CALLE
	    AND MAESTRA.[Cliente_Nro_Calle] = CLIENTE.CALLE_NRO
	    AND MAESTRA.[Cliente_Piso] = CLIENTE.CALLE_PISO
	    AND MAESTRA.[Cliente_Depto] = CLIENTE.CALLE_DEPTO
		AND MAESTRA.[Cliente_Nacionalidad] = CLIENTE.NACIONALIDAD
		AND MAESTRA.[Cliente_Fecha_Nac] = CLIENTE.FECHA_NACIMIENTO
INNER JOIN  [AVENGERS].[CONSUMIBLE] AS CON  ON MAESTRA.Consumible_Codigo = CON.ID
							  AND MAESTRA.Consumible_Descripcion = CON.DESCRIPCION
							  AND MAESTRA.Consumible_Precio = CON.PRECIO
INNER JOIN [AVENGERS].[CONSUMO_CONSUMIBLE]  ON CON.ID = CONSUMO_CONSUMIBLE.ID_CONSUMO
INNER JOIN [AVENGERS].[CONSUMO]	ON 	CONSUMO_CONSUMIBLE.ID_CONSUMO =CONSUMO.ID 
WHERE MAESTRA.Item_Factura_Cantidad is not null
GO

---------------------------------------------------------------------------------------------------
----------------------------------------CREACION DE VISTAS-----------------------------------------
---------------------------------------------------------------------------------------------------

/* TOP 5 */

/* Hoteles con mayor cantidad de reservas canceladas */
CREATE VIEW AVENGERS.VW_HOTEL_RESERVAS_CANCELADAS AS
	SELECT TOP 5 NOMBRE FROM AVENGERS.HOTEL;
GO

/* Hoteles con mayor cantidad de consumibles facturados */
CREATE VIEW AVENGERS.VW_HOTEL_CONSUMIBLES_FACTURADOS AS
	SELECT TOP 5 NOMBRE FROM AVENGERS.HOTEL;
GO

/* Hoteles con mayor cantidad de días fuera de servicio */
CREATE VIEW AVENGERS.VW_HOTEL_FUERA_SERVICIO AS
	SELECT TOP 5 NOMBRE FROM AVENGERS.HOTEL;
GO	

/* Habitaciones con mayor cantidad de días y veces que fueron ocupadas,
informando a demás a que hotel perteneces */
CREATE VIEW AVENGERS.VW_HABITACIONES_OCUPADAS AS
	SELECT TOP 5 AVENGERS.HABITACION.NUMERO,HOTEL.NOMBRE FROM AVENGERS.HABITACION, AVENGERS.HOTEL;
GO

/* Cliente con mayor cantidad de puntos, donde cada $20 en estadías vale 1
puntos y cada $10 de consumibles es 1 punto, de la sumatoria de todas las
facturaciones que haya tenido dentro de un periodo independientemente
del Hotel. Tener en cuenta que la facturación siempre es a quien haya
realizado la reserva */

CREATE VIEW AVENGERS.VW_CLIENTE_TOP AS 

SELECT F.FECHA, F.ID_CLIENTE, (CLI.APELLIDO + ' ' + CLI.NOMBRE) 'NOMBRE_CLIENTE', SUM(REG.PRECIO * EST.CANTIDAD_NOCHES) 'TOTAL_ESTADIA', SUM(CBLE.PRECIO * CMO.CANTIDAD) 'TOTAL_CONSUMIBLES'
FROM AVENGERS.FACTURA F
INNER JOIN AVENGERS.ITEM_FACTURA ITF
ON F.TIPO = ITF.TIPO_FAC AND F.NUMERO = ITF.NUMERO_FAC
INNER JOIN AVENGERS.CONSUMO CMO
ON ITF.ID_CONSUMO = CMO.ID
INNER JOIN AVENGERS.CONSUMIBLE CBLE
ON CMO.ID_CONSUMIBLE = CBLE.ID
INNER JOIN AVENGERS.ESTADIA EST
ON F.NUMERO_RESERVA = EST.NUMERO_RESERVA
INNER JOIN AVENGERS.RESERVA RES
ON F.NUMERO_RESERVA = RES.ID
INNER JOIN AVENGERS.REGIMEN REG
ON RES.ID_REGIMEN = REG.ID
INNER JOIN AVENGERS.CLIENTE CLI
ON CLI.ID = F.ID_CLIENTE
GROUP BY F.FECHA, F.NUMERO, F.ID_CLIENTE, CLI.APELLIDO, CLI.NOMBRE

GO



---------------------------------------------------------------------------------------------------
----------------------------------------CREACION DE FUNCIONES-----------------------------------------
---------------------------------------------------------------------------------------------------



CREATE FUNCTION AVENGERS.FX_HABITACION_DISPONIBLE( @TIPO_HABITACION  NVARCHAR(255),
													 @NOMBRE NVARCHAR(255))
RETURNS INT

		BEGIN
				DECLARE @ID_HABITACION INT
				SET @ID_HABITACION = 0
				SELECT
						 @ID_HABITACION =[AVENGERS].[HABITACION].ID
			   FROM [AVENGERS].[HABITACION],[AVENGERS].[TIPO_HABITACION],[AVENGERS].[HOTEL]
			   WHERE  [AVENGERS].[TIPO_HABITACION].DESCRIPCION = @TIPO_HABITACION
			   AND    [AVENGERS].[HABITACION].OCUPADA = 0
			   AND [AVENGERS].[HOTEL].NOMBRE = @NOMBRE
			   AND  [AVENGERS].[HABITACION].ID_HOTEL = [AVENGERS].[HOTEL].ID


			   RETURN @ID_HABITACION
		END

GO



---------------------------------------------------------------------------------------------------
----------------------------------------CREACION DE STORED PROCEDURE-----------------------------------------
---------------------------------------------------------------------------------------------------


/* ingresar Reserva*/
CREATE PROCEDURE AVENGERS.SP_INSERTAR_RESERVA(@FECHA_CREACION AS DATE ,
								  @FECHA_DESDE DATE,
								  @FECHA_HASTA DATE,
								  @CANT_NOCHES NUMERIC(18,0),
								  @ID_REGIMEN INT,
								  @ID_CLIENTE INT)AS
DECLARE @ID_RESERVA_CREADA INT
SET @ID_RESERVA_CREADA  = 0
	BEGIN
		INSERT INTO [AVENGERS].[RESERVA] 
		(FECHA_CREACION,
		 FECHA_DESDE,
		 FECHA_HASTA,
		 CANTIDAD_NOCHES,
		 CODIGO_SEGURIDAD,
		 ID_REGIMEN,
		 ID_CLIENTE,
		 MODIFICADA,
		 MODIFICADA_USUARIO,
		 ESTADO ) 
		VALUES(@FECHA_CREACION,
			   @FECHA_DESDE,
			   @FECHA_HASTA,
			   @CANT_NOCHES,
			   0,
			   @ID_REGIMEN,
			   @ID_CLIENTE,
			   0,
			   0,
			   1)

	-- se obtiene el ultimo id ingresado  en la tabla reservas
		 SET @ID_RESERVA_CREADA = CAST(IDENT_CURRENT('[AVENGERS].[RESERVA]') AS INT ); 
		 RETURN @ID_RESERVA_CREADA
	END
GO


/*Generar Reserva*/

CREATE PROCEDURE AVENGERS.SP_GENERAR_RESERVA(@FECHA_CREACION AS DATE ,
								  @FECHA_DESDE DATE,
								  @FECHA_HASTA DATE,
								  @CANT_NOCHES NUMERIC(18,0),
								  @ID_REGIMEN INT,
								  @ID_CLIENTE INT,
								  @TIPO_HABITACION  NVARCHAR(255),
								  @NOMBRE NVARCHAR(255)) AS
DECLARE @ID_RESERVA INT
DECLARE @ID_HABITACION INT
SET @ID_RESERVA  = 0
SET @ID_HABITACION = 0
	BEGIN

	     /*Verificamos si exsite Habitación disponible*/
		 SELECT @ID_HABITACION = AVENGERS.FX_HABITACION_DISPONIBLE(@TIPO_HABITACION,@NOMBRE)
		
		 IF(@ID_HABITACION = 0)		 
				RETURN @ID_RESERVA ; -- NO HAY HABITACIÓN DISPONIBLE
		BEGIN TRY

			BEGIN TRANSACTION
				EXEC @ID_RESERVA = AVENGERS.SP_INSERTAR_RESERVA
											 @FECHA_CREACION,@FECHA_DESDE,
											@FECHA_HASTA,@CANT_NOCHES,
											 @ID_REGIMEN,@ID_CLIENTE

				/* Ingresamos la relación Habitación - Reserva  */
		
				INSERT INTO [AVENGERS].[RESERVA_HABITACION]
				VALUES(@ID_RESERVA , @ID_HABITACION)

				/*aztualizamos la ahabitación como ocupada*/
				UPDATE [AVENGERS].[HABITACION]
				SET [AVENGERS].[HABITACION].OCUPADA= 1
				WHERE [AVENGERS].[HABITACION].ID= @ID_HABITACION
			
			COMMIT TRANSACTION
		END TRY
		
		BEGIN CATCH
			ROLLBACK TRANSACTION
			RETURN @ID_RESERVA ;
		END CATCH	

		RETURN @ID_RESERVA ;
END
GO

CREATE PROCEDURE AVENGERS.SP_MODIFICAR_RESERVA(@ID_RESERVA INT) AS
	BEGIN
		SET @ID_RESERVA = CAST(IDENT_CURRENT('[AVENGERS].[RESERVA]') AS INT ); 
		RETURN @ID_RESERVA ;
	END
GO

CREATE PROCEDURE AVENGERS.SP_CANCELAR_RESERVA(@ID_RESERVA INT) AS
	BEGIN
		SET @ID_RESERVA = CAST(IDENT_CURRENT('[AVENGERS].[RESERVA]') AS INT ); 
		RETURN @ID_RESERVA ;
END
GO

CREATE PROCEDURE AVENGERS.SP_REGISTRAR_ESTADIA(@NRO_RESERVA INT, 
											   @FECHA DATETIME, 
											   @ID_CLIENTE INT ) as
DECLARE @ID_ESTADIA INT
SET @ID_ESTADIA = 0
 BEGIN
	
	SET @ID_ESTADIA = CAST(IDENT_CURRENT('AVENGERS.ESTADIA') AS INT ); 
	RETURN @ID_ESTADIA;
 END
 GO

CREATE PROCEDURE AVENGERS.SP_FACTURAR_ESTADIA(@TIPO INT,
											  @NRO_RESERVA INT, 
											  @FECHA DATETIME, @ID_CLIENTE INT,
											  @DIASUSADOS INT, @DIASNOUSADOS INT, @TOTAL NUMERIC(18,2),
											  @FORMAPAGO INT, @DATOSTARJETA NVARCHAR(255) ) as
DECLARE @NRO_FACTURA NUMERIC(18,0)
SET @NRO_FACTURA = 0
 BEGIN
	INSERT INTO AVENGERS.FACTURA (TIPO,NUMERO_RESERVA,FECHA,ID_CLIENTE,DIAS_USADOS,DIAS_NOUSADOS,TOTAL,FORMA_PAGO,DATOS_PAGO_TARJETA)
			    VALUES (@TIPO,@NRO_RESERVA,@FECHA,@ID_CLIENTE,5,2,@TOTAL,@FORMAPAGO,@DATOSTARJETA)
	
	SET @NRO_FACTURA = CAST(IDENT_CURRENT('AVENGERS.FACTURA') AS NUMERIC(18,0) ); 
	RETURN @NRO_FACTURA;
 END
 GO

 CREATE PROCEDURE AVENGERS.SP_GUARDAR_ITEMS_FACTURA(@NRO_FACTURA NUMERIC(18,0),
													@TIPO INT,
													@POSICION INT,
													@NRO_RESERVA INT, 
													@MONTO NUMERIC(18,2),
													@CONSUMO INT) as

  BEGIN
--	INSERT INTO AVENGERS.ITEM_FACTURA ()
--			    VALUES (@NRO_FACTURA,@TIPO INT,@POSICION,@NRO_RESERVA, @MONTO,@CONSUMO)
	RETURN @POSICION;
  END
 GO


---------------------------------------------------------------------------------------------------
----------------------------------------CREACION DE TRIGGERS-----------------------------------------
---------------------------------------------------------------------------------------------------

/**Al registrar un consumo, se actualiza la tabla intermedia entre consumo y consumible**/

  CREATE TRIGGER AVENGERS.TR_CONSUMO_CONSUMIBLE
  ON AVENGERS.CONSUMO
  AFTER INSERT
  AS
  BEGIN
	DECLARE @consumible INT
	DECLARE @idConsumo INT
	SELECT @consumible = ID_CONSUMIBLE, @idConsumo = ID FROM INSERTED
	INSERT INTO AVENGERS.CONSUMO_CONSUMIBLE VALUES (@idConsumo,@consumible)
  END
  GO
